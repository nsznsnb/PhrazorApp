@page "/Account/RegisterConfirmation"
@using PhrazorApp.Components.Layout
@layout AccountEmptyLayout

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using PhrazorApp.Data
@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>アカウント仮登録完了</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudPaper Elevation="5" Class="pa-16">
        <MudGrid Justify="Justify.Center">
            <MudItem xs="12">
                <MudStack Row="true" Spacing="2" Justify="Justify.Center" AlignItems="AlignItems.Center" Style="transform: translateX(-10px);">
                    <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Primary" />
                    <MudText Typo="Typo.h6" Color="Color.Primary" Style="font-weight:700;">@ComDefine.APP_NAME</MudText>
                </MudStack>
            </MudItem>
            <MudItem>
                <StatusMessage Message="@errorMessage" />
                @if(string.IsNullOrEmpty(errorMessage))
                {
                    <MudStack Row="true" Spacing="2" Justify="Justify.Center" AlignItems="AlignItems.Center" Style="transform: translateX(-10px);">
                        <MudIcon Icon="@Icons.Material.Filled.Email" Color="Color.Dark" />
                        <MudText Typo="Typo.h5">アカウント仮登録完了</MudText>
                    </MudStack>
                    <MudText Typo="Typo.body1" Class="mt-4" GutterBottom="true">まだ登録は完了しておりません。</MudText>
                    <MudText Typo="Typo.body1" Class="mt-4" GutterBottom="true">ご登録いただいたメールアドレス宛に、本人確認メールを送信しました。</MudText>
                    <MudText Typo="Typo.body1" Class="mt-0" GutterBottom="true">メール本文に記載のURLをクリックしてアカウント登録を完了させてください。</MudText>
                }

                <MudDivider Class="mt-4" />
                <MudText Typo="Typo.body2" Class="mt-4" GutterBottom="true" Style="max-width: 500px;">※しばらく経ってもメールが届かない場合は、迷惑フォルダに振り分けられているか、メールアドレスの入力間違いの可能性がございます。</MudText>

                <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.Center" Spacing="2" Class="mt-4">
                    <MudLink Href="/Account/Login" Typo="Typo.body2" Color="Color.Primary"><b>ログイン画面に戻る</b></MudLink>
                </MudStack>
            </MudItem>
        </MudGrid>
    </MudPaper>
</MudContainer>

@code {
    private string? emailConfirmationLink;
    private string? errorMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            errorMessage =　string.Format(ComMessage.MSG_E_ERROR_DETEIL,"仮登録中");
        }
        else if (EmailSender is IdentityNoOpEmailSender)
        {
            // Once you add a real email sender, you should remove this code that lets you confirm the account
            var userId = await UserManager.GetUserIdAsync(user);
            var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
                NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
                new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl });
        }
    }
}
