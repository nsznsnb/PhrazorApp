@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>プロフィール</PageTitle>

<MudText Typo="Typo.h6" GutterBottom="true">プロフィール</MudText>

<StatusMessage />

<EditForm id="@AppConstants.ID_FORM" Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
    <DataAnnotationsValidator />

    <MudGrid Spacing="2" Class="mt-2">
        <MudItem xs="12">
            <MudStaticTextField Value="@username" Label="ユーザーID" Disabled="true" 
                Class="pb-2" Margin="Margin.Dense" Variant="Variant.Outlined" Placeholder="Please choose your username." />
        </MudItem>
        <MudItem xs="12">
            <MudStaticTextField Value="@email" Disabled="true" 
                                Class="pb-2" Margin="Margin.Dense" Variant="Variant.Outlined" Label="メールアドレス" ShrinkLabel　Placeholder="name@example.com"
                                UserAttributes="@(new() { { "autocomplete", "email" }, { "aria-required", "true" } })" />
        </MudItem>
        <MudItem xs="12">
            <MudGrid Spacing="2">
                <MudItem xs="12" sm="6">
                    <MudStaticTextField @bind-Value="@Input.LastName" For="() => Input.LastName"
                                        Class="pb-2" Margin="Margin.Dense" Variant="Variant.Outlined" Label="姓" ShrinkLabel　
                                        HelperText="@string.Format(AppMessages.MSG_I_HELPER_ARBITRAY_DETAIL, "姓")"
                                        UserAttributes="@(new() { { "autocomplete", "name" } })" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudStaticTextField @bind-Value="@Input.FirstName" For="() => Input.FirstName"
                                        Class="pb-2" Margin="Margin.Dense" Variant="Variant.Outlined" Label="名" ShrinkLabel　
                                        HelperText="@string.Format(AppMessages.MSG_I_HELPER_ARBITRAY_DETAIL, "名")"
                                        UserAttributes="@(new() { { "autocomplete", "name" } })" />
                </MudItem>
            </MudGrid>
        </MudItem>
        

        <MudItem xs="12">
            <MudStaticButton id="@AppConstants.ID_BUTTON_SUBMIT" Variant="Variant.Filled" Size="@AppConstants.SIZE_BUTTON" Color="Color.Primary" FullWidth="true" FormAction="FormAction.Submit">保存</MudStaticButton>
        </MudItem>
    </MudGrid>
</EditForm>

@code {


    private ApplicationUser user = default!;
    private string? username;

    private string? firstName;
    private string? lastName;
    private string? email;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await UserManager.GetUserNameAsync(user);
        firstName = user.FirstName;
        lastName = user.LastName;
        email = user.Email;
        Input.FirstName ??= user.FirstName;
        Input.LastName ??= user.LastName;

    }

    private async Task OnValidSubmitAsync()
    {
        user.FirstName = Input.FirstName;
        user.LastName = Input.LastName;

        // ユーザー情報の更新
        var updateResult = await UserManager.UpdateAsync(user);
        if (!updateResult.Succeeded)
        {
            // エラー処理（例: ログ記録やModelStateへの追加）
            RedirectManager.RedirectToCurrentPageWithStatus(string.Format(AppMessages.MSG_E_FAILURE_DETAIL, "プロフィールの保存"), HttpContext);

        }

        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToCurrentPageWithStatus(AppConstants.PREFIX_ACCOUNT_INFO_MESSAGE + "プロフィールを保存しました。", HttpContext);
    }

    private sealed class InputModel
    {
        [StringLength(10, ErrorMessage = AppMessages.MSG_E_RANGE_LESS_THAN)]
        [Display(Name = "名")]
        public string? FirstName { get; set; }
        [StringLength(10, ErrorMessage = AppMessages.MSG_E_RANGE_LESS_THAN)]
        [Display(Name = "姓")]
        public string? LastName { get; set; }

    }
}
