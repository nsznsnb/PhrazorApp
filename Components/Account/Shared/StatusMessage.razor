@using Microsoft.AspNetCore.Identity
@if (IdentityErrors is not null && IdentityErrors.Any())
{
    <MudAlert Variant="Variant.Outlined" Severity="Severity.Error">
        <ul class="mud-list">
            @foreach (var error in IdentityErrors)
            {
                <li>@error.Description</li>
            }
        </ul>
    </MudAlert>
}
else if (!string.IsNullOrEmpty(DisplayMessage))
{
    var severity = DisplayMessage.StartsWith(ComDefine.PREFIX_ACCOUNT_INFO_MESSAGE) ? Severity.Success : Severity.Error;

    <MudAlert Variant="Variant.Outlined" Severity="@severity">
        @(DisplayMessage.Replace(ComDefine.PREFIX_ACCOUNT_INFO_MESSAGE,""))
    </MudAlert>
}

@code {

    private string? messageFromCookie;

    [Parameter]
    public string? Message { get; set; }

    [Parameter]
    public IEnumerable<IdentityError>? IdentityErrors { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private string? DisplayMessage;

    protected override void OnParametersSet()
    {
        messageFromCookie = HttpContext.Request.Cookies[IdentityRedirectManager.StatusCookieName];

        if (messageFromCookie is not null)
        {
            HttpContext.Response.Cookies.Delete(IdentityRedirectManager.StatusCookieName);
        }

        if (Message != null)
        {
            DisplayMessage = Message;
        }
        else
        {
            DisplayMessage = messageFromCookie;
        }
    }

    protected override void OnInitialized()
    {

    }
}
