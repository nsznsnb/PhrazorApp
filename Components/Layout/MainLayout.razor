@inherits LayoutComponentBase
@inject LoadingManager LoadingManager

<MudThemeProvider Theme="AppTheme.MyCustomTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.TwoTone.Menu"
                       Edge="Edge.Start"
                       OnClick="@Toggle" />
        <MudLink Href="/" Class="ml-3" Style="text-decoration: none; color: inherit;">
            <AppLogo />
        </MudLink>
        <MudSpacer />
        <UserMenu />
    </MudAppBar>

    <!-- 単一の Drawer（Responsive + Docked）-->
    <MudDrawer @bind-Open="_drawerOpen"
               Variant="DrawerVariant.Responsive"
               Breakpoint="Breakpoint.Md"
               ClipMode="DrawerClipMode.Docked"
               Elevation="2"
               Overlay="true"
               OverlayAutoClose="true">
        <!-- 小画面：AppBarに重なる分のクローズバー -->
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudDrawerHeader Dense>
                <MudSpacer />
                <MudIconButton Icon="@Icons.Material.TwoTone.Close" Variant="Variant.Text" OnClick="@Close" Size="Size.Small" />
            </MudDrawerHeader>
        </MudHidden>
        <NavMenu />
    </MudDrawer>

    <MudMainContent Class="pa-4">
        <MudContainer Class="pt-16">
            <MudBreakpointProvider OnBreakpointChanged="OnBpChanged" />
            <CascadingValue Value="CurrentBreakpoint">
                @Body
            </CascadingValue>
        </MudContainer>
        <MudScrollToTop>
            <MudFab Color="Color.Primary" StartIcon="@Icons.Material.TwoTone.KeyboardArrowUp" />
        </MudScrollToTop>
    </MudMainContent>

</MudLayout>
<ProgressingOverlay />

<div id="blazor-error-ui" data-nosnippet>
    未処理例外が発生しました。アプリケーションをリロードしてください。
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>


@code {
    bool _drawerOpen = true;     // Md以上では押し出し表示、Md未満ではオーバーレイ表示
    void Toggle() => _drawerOpen = !_drawerOpen;
    void Close() => _drawerOpen = false;

    // 初期値はデスクトップ想定（初回レンダー後に実値へ更新されます）
    private Breakpoint CurrentBreakpoint = Breakpoint.Xl;

    private void OnBpChanged(Breakpoint bp)
    {
        CurrentBreakpoint = bp;
        StateHasChanged();
    }
}


