@page "/docs/manuals"
@attribute [Authorize]

<PageTitle>操作マニュアル</PageTitle>

<MudStack Spacing="2">
    <SectionTitle Title="操作マニュアル" />

    <ActionCard>
        <!-- PDFを添付ダウンロード -->
        <MudButton Variant="Variant.Outlined"
                   Color="Color.Primary"
                   StartIcon="@Icons.Material.TwoTone.Download"
                   Href="@PdfDownloadUrl">
            PDF をダウンロード
        </MudButton>

        <!-- DOCXを添付ダウンロード（ブラウザ内プレビュー不可のため常に download） -->
        <MudButton Variant="Variant.Outlined"
                   Color="Color.Secondary"
                   StartIcon="@Icons.Material.TwoTone.Description"
                   Href="@DocxDownloadUrl">
            Word をダウンロード
        </MudButton>

        <!-- PDFを新規タブで inline 表示 -->
        <MudButton Variant="Variant.Outlined"
                   Color="Color.Info"
                   StartIcon="@Icons.Material.TwoTone.OpenInNew"
                   Href="@PdfViewUrl" Target="_blank">
            新しいタブで開く
        </MudButton>
    </ActionCard>

    <MudCard Elevation="AppConstants.DEFAULT_ELEVATION">
        <MudCardContent Class="py-2">
            <MudText Typo="Typo.subtitle1">PDFプレビュー</MudText>
        </MudCardContent>
        <MudCardContent Class="p-0">
            <!-- /files は既定 inline。PdfPreview は src にそのまま指定 -->
            <PdfPreview Src="@PdfViewUrl" Height="78vh" />
        </MudCardContent>
    </MudCard>

</MudStack>

@code {
    // /Endpoints/FileEndpoints.cs に統合済みの /files を利用（Downloads/docs/... に実体を配置）
    private const string BasePath = "/files/manuals/Phrazor_Manual";
    private const string PdfViewUrl = $"{BasePath}.pdf";             // inline 表示
    private const string PdfDownloadUrl = $"{BasePath}.pdf?download=1"; // 添付ダウンロード
    private const string DocxDownloadUrl = $"{BasePath}.docx?download=1"; // 添付ダウンロード
}
