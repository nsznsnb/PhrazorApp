@page "/phrases"
@attribute [Authorize]

@inject NavigationManager NavigationManager
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject ICategoryService CategoryService

<MudContainer>
    <MudStack Spacing="2">
        <SectionTitle Title="フレーズ一覧"/>
        <MudCard Elevation="@ComDefine.DEFAULT_ELEVATION_CARD">
            <MudCardContent Class="py-2">
                <MudStack Row="true" Spacing="1">
                    <MudButton Variant="Variant.Filled" Size="Size.Small" Color="Color.Tertiary" StartIcon="@Icons.Material.TwoTone.Add" OnClick="@(() => NavigationManager.NavigateTo("/phrases/create"))">新規追加</MudButton>
                </MudStack>
            </MudCardContent>
        </MudCard>
        <MudCard Elevation="@ComDefine.DEFAULT_ELEVATION_CARD">
            <MudCardHeader>
                <CardHeaderContent>
                    <SectionTitle HeadingLevel="3" Icon="@Icons.Material.TwoTone.ListAlt"
                                  Title="フレーズ一覧" />
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudTable Items="@Elements" Hover="true" Height="500px" FixedHeader="true" FixedFooter="true" Dense="true">
                    <HeaderContent>
                        <MudTh>カテゴリ</MudTh>
                        <MudTh style="min-width: 200px;">操作</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>
                            <MudStack Spacing="1">
                                <MudText Typo="Typo.subtitle1" Style="font-weight: 600;">@context.Name</MudText>
                                <MudStack Row Wrap="Wrap.Wrap" Spacing="0">
                                    @foreach (var sub in context.SubCategories)
                                    {
                                        <MudChip Color="Color.Default"
                                                 T="string"
                                                 Variant="Variant.Text"
                                                 Size="Size.Small">
                                            @sub.Name
                                        </MudChip>
                                    }
                                </MudStack>
                            </MudStack>

                        </MudTd>
                        <MudTd Align="Right" style="min-width: 200px;">
                            <MudStack Row="true">
                                <MudButton Variant="Variant.Outlined" Size="Size.Small" Color="Color.Secondary" StartIcon="@Icons.Material.TwoTone.Edit" OnClick="@(() => NavigationManager.NavigateTo($"/categories/edit/{context.Id}"))">@ComDefine.LABEL_BUTTON_EDIT</MudButton>
                                <MudButton Variant="Variant.Outlined" Size="Size.Small" Color="Color.Error" StartIcon="@Icons.Material.TwoTone.Delete" OnClick="@(() => OnDeleteButtonClickedAsync(context))">@ComDefine.LABEL_BUTTON_DELETE</MudButton>
                            </MudStack>
                        </MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager />
                    </PagerContent>
                </MudTable>
            </MudCardContent>

        </MudCard>



    </MudStack>
</MudContainer>



@code {


    private LargeCategoryModel model = new LargeCategoryModel();

    private List<LargeCategoryModel> Elements = new();


    protected override async Task OnInitializedAsync()
    {
        // 一覧取得
        Elements = await CategoryService.GetCategoryViewModelListAsync();

    }

    private async Task OnDeleteButtonClickedAsync(LargeCategoryModel item)
    {
        // 確認ダイアログ表示
        var dialog = await DialogService.ShowCommonDialogAsync(CommonDialogPattern.DeleteConfirm, string.Format(ComMessage.MSG_I_CONFIRM_DELETE, item.Name));
        var dialogResult = await dialog.Result;

        if (dialogResult!.Canceled)
        {
            return;
        }

        // カテゴリ削除
        var result = await CategoryService.DeleteCategoryAsync(item.Id);
        Snackbar.AddServiceResult(result);
        if (!result.IsSuccess)
        {
            return;
        }

        // 一覧取得
        Elements = await CategoryService.GetCategoryViewModelListAsync();
    }



}
