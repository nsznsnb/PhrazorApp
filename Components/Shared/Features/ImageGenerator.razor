@inject ImageService ImageService
@inject UiOperationRunner UiOperationRunner

<MudPaper Class="pa-2" Outlined="true" Style="width: 100%; max-width: 286px;">
    <MudStack Spacing="2" AlignItems="AlignItems.Start" Class="pa-1">
        <MudButton StartIcon="@Icons.Material.TwoTone.ImageSearch"
                   Variant="Variant.Filled"
                   Color="Color.Secondary"
                   Size="@AppConstants.SIZE_BUTTON"
                   OnClick="Generate"
                   FullWidth
                   Disabled="IsLoading || string.IsNullOrWhiteSpace(Prompt)">
            画像生成
        </MudButton>

        @if (IsLoading)
        {
            <MudSkeleton Width="100%" Height="auto" Style="aspect-ratio: 1;" Animation="Animation.Wave" />
        }
        else
        {
            <MudImage Src="@(string.IsNullOrWhiteSpace(ImageUrlInternal) ? "/images/no_img.png" : ImageUrlInternal)"
                      Alt="生成画像"
                      Elevation="25"
                      Fluid="true"
                      Style="aspect-ratio: 1; object-fit: contain;"
                      Class="rounded-lg" />
        }
    </MudStack>
</MudPaper>

@code {
    private bool IsLoading = false;
    private string? ImageUrlInternal;
    private string? ErrorMessage;

    [Parameter, EditorRequired]
    public string? Prompt { get; set; }

    [Parameter, EditorRequired]
    public string? ImageUrl { get; set; }

    [Parameter]
    public EventCallback<string?> ImageUrlChanged { get; set; }

    protected override void OnParametersSet()
    {
        ImageUrlInternal = ImageUrl;
    }

    private async Task Generate()
    {
        if (string.IsNullOrWhiteSpace(Prompt))
            return;

        // 局所UIの無効化用
        IsLoading = true;
        ErrorMessage = null;
        ImageUrlInternal = null;
        StateHasChanged();

        var url = await UiOperationRunner.ReadWithOverlayAsync(
            () => ImageService.GenerateImageAsync(Prompt),   // ★ CTなし版
            message: "画像生成中..."
        );
        if (!string.IsNullOrWhiteSpace(url))
        {
            ImageUrlInternal = url;
            await ImageUrlChanged.InvokeAsync(ImageUrlInternal);
        }
        else
        {
            // 失敗時は Service 側のメッセージが Snackbar に出ています
            // 追加のUI処理が必要ならここで
        }


        IsLoading = false;
        StateHasChanged();
    }
}
