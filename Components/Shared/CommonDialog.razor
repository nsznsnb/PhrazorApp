
<BaseDialogWrapper DialogColor="color"
                     DialogTitle="@titleText"
                     ExecuteButtonText="@executeButtonText"
                     CancelButtonText="@ComDefine.LABEL_BUTTON_CANCEL"
                     OnExecuteCallback="Submit"
                     ExecuteResult="true"
                     ShowExecuteButton="true">
    <MudText>@ContentText</MudText>
</BaseDialogWrapper>

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public CommonDialogPattern DialogPattern { get; set; }
    [Parameter] public string ContentText { get; set; } = string.Empty;

    private Color color = Color.Info;
    private string titleText = string.Empty;
    private string executeButtonText = string.Empty;

    protected override void OnInitialized()
    {
        switch (DialogPattern)
        {
            case CommonDialogPattern.DeleteConfirm:
                color = Color.Error;
                titleText = ComDefine.LABEL_DIALOG_TITLE_DELETE_CONFIRM;
                executeButtonText = ComDefine.LABEL_BUTTON_DELETE;
                break;
            case CommonDialogPattern.RegisterConfirm:
                color = Color.Info;
                titleText = ComDefine.LABEL_DIALOG_TITLE_REGISTER_CONFIRM;
                executeButtonText = ComDefine.LABEL_BUTTON_REGISTER;
                break;
            default:
                color = Color.Info;
                titleText = "確認";
                executeButtonText = "OK";
                break;
        }
    }

    private Task Submit() => Task.CompletedTask; // 実行処理は親でハンドリングされるためここでは何もしない
}
