@inherits LayoutComponentBase
@implements IDisposable
@inject NavigationManager NavigationManager
@inject LoadingManager LoadingManager
@inject PhrazorApp.Components.State.PageMessageStore PageMessageStore

<MudThemeProvider Theme="AppTheme.MyCustomTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.TwoTone.Menu"
                       Edge="Edge.Start"
                       OnClick="@Toggle" />
        <MudLink Href="/" Class="ml-3" Style="text-decoration: none; color: inherit;">
            <AppLogo />
        </MudLink>
        <MudSpacer />
        <UserMenu />
    </MudAppBar>

    <!-- 単一の Drawer（Responsive + Docked）-->
    <MudDrawer @bind-Open="_drawerOpen"
               Variant="DrawerVariant.Responsive"
               Breakpoint="Breakpoint.Md"
               ClipMode="DrawerClipMode.Docked"
               Elevation="2"
               Overlay="true"
               OverlayAutoClose="true">
        <!-- 小画面：AppBarに重なる分のクローズバー -->
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudDrawerHeader Dense>
                <MudSpacer />
                <MudIconButton Icon="@Icons.Material.TwoTone.Close" Variant="Variant.Text" OnClick="@Close" Size="Size.Small" />
            </MudDrawerHeader>
        </MudHidden>
        <NavMenu />
    </MudDrawer>

    <MudMainContent Class="pa-4 main-host">
        <!-- Bodyだけ覆う -->
        <LoadingOverlay Mode="OverlayScope.BodyOnly" />

        <MudContainer Class="pt-16">
            <!--  各ページ先頭に出るメッセージバー -->
            <PageMessageBar />

            <MudBreakpointProvider OnBreakpointChanged="OnBpChanged" />
            <CascadingValue Value="CurrentBreakpoint">
                @Body
            </CascadingValue>
        </MudContainer>

        <MudScrollToTop TopOffset="100">
            <MudFab Color="Color.Primary" StartIcon="@Icons.Material.TwoTone.KeyboardArrowUp" />
        </MudScrollToTop>
    </MudMainContent>
</MudLayout>

<!-- 全画面用（ダイアログ時など） -->
<LoadingOverlay Mode="OverlayScope.Global" />

<div id="blazor-error-ui" data-nosnippet>
    未処理例外が発生しました。アプリケーションをリロードしてください。
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

<style>
    .main-host {
        position: relative; /* 子の MudOverlay(Absolute) がこの領域だけを覆う */
        min-height: 100%;
    }
</style>

@code {
    private IDisposable? _navChangingReg;
    private bool _drawerOpen = true;     // Md以上:押し出し / Md未満:オーバーレイ
    private Breakpoint CurrentBreakpoint = Breakpoint.Xl;

    protected override void OnInitialized()
    {
        // 1) ページ遷移開始時：ローディングを閉じる & メッセージを消す
        _navChangingReg = NavigationManager.RegisterLocationChangingHandler(ctx =>
        {
            LoadingManager.Hide();
            PageMessageStore.Clear();   // ← ★遷移開始で確実クリア
            return ValueTask.CompletedTask;
        });

        // 2) 遷移完了時（URL 変化通知）でも念のためクリア（ブラウザ戻る等のケースケア）
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // 3) 初回表示タイミングでも必ずクリア
            PageMessageStore.Clear();
        }
        return Task.CompletedTask;
    }

    private void OnLocationChanged(object? sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {
        PageMessageStore.Clear(); // ← 二重防御（ナビ完了時）
        StateHasChanged();
    }

    void Toggle() => _drawerOpen = !_drawerOpen;
    void Close() => _drawerOpen = false;

    private void OnBpChanged(Breakpoint bp)
    {
        CurrentBreakpoint = bp;
        StateHasChanged();
    }

    public void Dispose()
    {
        _navChangingReg?.Dispose();
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
